--- workflows/vqsr_batch.py	2021-03-15 12:43:43.000000000 +1100
+++ workflows/vqsr_batch.py	2021-03-15 12:43:49.000000000 +1100
@@ -1,4 +1,4 @@
-import math, os
+import math, os, tempfile
 from typing import Union, Optional, List

 import click
@@ -206,7 +206,7 @@
         HardFilterAndMakeSitesOnlyVcf.append(
             add_HardFilterAndMakeSitesOnlyVcf_step(
                 b,
-                vcf=GnarlyGenotyperOnVcf.output_vcf,
+                vcf=[j.output_vcf for j in GnarlyGenotyperOnVcf],
                 excess_het_threshold=excess_het_threshold,
                 variant_filtered_vcf_filename=(
                     ((callset_name + ".") + str(idx)) + ".variant_filtered.vcf.gz"
@@ -220,7 +220,7 @@
         )
     SitesOnlyGatherVcf = add_SitesOnlyGatherVcf_step(
         b,
-        input_vcfs=HardFilterAndMakeSitesOnlyVcf.sites_only_vcf,
+        input_vcfs=[j.sites_only_vcf for j in HardFilterAndMakeSitesOnlyVcf],
         output_vcf_name=(callset_name + ".sites_only.vcf.gz"),
         disk_size=medium_disk,
     )
@@ -264,16 +264,12 @@
     )
 
     SNPsVariantRecalibratorScattered = []
-    for idx in range(len(HardFilterAndMakeSitesOnlyVcf.sites_only_vcf)):
+    for j in HardFilterAndMakeSitesOnlyVcf:
         SNPsVariantRecalibratorScattered.append(
             add_SNPsVariantRecalibratorScattered_step(
                 b,
-                sites_only_variant_filtered_vcf=HardFilterAndMakeSitesOnlyVcf.sites_only_vcf[
-                    str(idx)
-                ],
-                sites_only_variant_filtered_vcf_index=HardFilterAndMakeSitesOnlyVcf.sites_only_vcf_index[
-                    str(idx)
-                ],
+                sites_only_variant_filtered_vcf=j.sites_only_vcf,
+                sites_only_variant_filtered_vcf_index=j.sites_only_vcf_index,
                 recalibration_filename=(
                     ((callset_name + ".snps.") + str(idx)) + ".recal"
                 ),
@@ -299,32 +295,26 @@
         )
     SNPGatherTranches = add_SNPGatherTranches_step(
         b,
-        tranches=SNPsVariantRecalibratorScattered.tranches,
+        tranches=[j.tranches for j in SNPsVariantRecalibratorScattered],
         output_filename=(callset_name + ".snps.gathered.tranches"),
         disk_size=small_disk,
     )
 
     ApplyRecalibration = []
-    for idx in range(len(HardFilterAndMakeSitesOnlyVcf.variant_filtered_vcf)):
+    for idx, j in enumerate(HardFilterAndMakeSitesOnlyVcf):
         ApplyRecalibration.append(
             add_ApplyRecalibration_step(
                 b,
                 recalibrated_vcf_filename=(
-                    ((callset_name + ".filtered.") + idx) + ".vcf.gz"
+                    ((callset_name + ".filtered.") + str(idx)) + ".vcf.gz"
                 ),
-                input_vcf=HardFilterAndMakeSitesOnlyVcf.variant_filtered_vcf[idx],
-                input_vcf_index=HardFilterAndMakeSitesOnlyVcf.variant_filtered_vcf_index[
-                    idx
-                ],
+                input_vcf=j.variant_filtered_vcf,
+                input_vcf_index=j.variant_filtered_vcf_index,
                 indels_recalibration=IndelsVariantRecalibrator.recalibration,
                 indels_recalibration_index=IndelsVariantRecalibrator.recalibration_index,
                 indels_tranches=IndelsVariantRecalibrator.tranches,
-                snps_recalibration=SNPsVariantRecalibratorScattered.recalibration[
-                    idx
-                ],
-                snps_recalibration_index=SNPsVariantRecalibratorScattered.recalibration_index[
-                    idx
-                ],
+                snps_recalibration=SNPsVariantRecalibratorScattered[idx].recalibration,
+                snps_recalibration_index=SNPsVariantRecalibratorScattered[idx].recalibration_index,
                 snps_tranches=SNPGatherTranches.out_tranches,
                 indel_filter_level=indel_filter_level,
                 snp_filter_level=snp_filter_level,
@@ -344,7 +340,7 @@ def main(
     if is_small_callset:
         FinalGatherVcf = add_FinalGatherVcf_step(
             b,
-            input_vcfs=ApplyRecalibration.recalibrated_vcf,
+            input_vcfs=[j.recalibrated_vcf for j in ApplyRecalibration],
             output_vcf_name=(callset_name + ".vcf.gz"),
             disk_size=huge_disk,
         )
@@ -774,10 +764,15 @@
     j.memory(f"6.519261G")
     j.storage(f'{(("local-disk " + str(disk_size)) + " HDD")}G')

+    tranches_file = tempfile.NamedTemporaryFile(suffix="_tranches.list")
+    with open(tranches_file.name, 'w') as out:
+        for tranch in tranches:
+            out.write(f'{tranch}\n')
+
     j.command(
         f"""set -euo pipefail

-    tranches_fofn={JANIS: write_lines([inputs.tranches])}
+    tranches_fofn={tranches_file.name}

     # Jose says:
     # Cromwell will fall over if we have it try to localize tens of thousands of files,
